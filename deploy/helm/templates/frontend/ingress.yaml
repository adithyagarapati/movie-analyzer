{{- if .Values.ingress.enabled }}
---
# Frontend Ingress (Optional - for production use with ingress controller)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.frontend.name }}-ingress
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.frontend.name }}
  annotations:
    {{- if eq .Values.ingress.type "alb" }}
    alb.ingress.kubernetes.io/scheme: {{ .Values.ingress.alb.scheme }}
    alb.ingress.kubernetes.io/target-type: {{ .Values.ingress.alb.targetType }}
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.alb.certificateArn }}
    alb.ingress.kubernetes.io/group.name: {{ .Values.ingress.alb.groupName }}
    alb.ingress.kubernetes.io/group.order: {{ .Values.ingress.alb.groupOrder | quote }}
    {{- else if eq .Values.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/rewrite-target: /
    {{- end }}
    {{- range $key, $value := .Values.ingress.customAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if and (eq .Values.ingress.type "nginx") .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.frontend.name }}
            port:
              number: {{ .Values.frontend.service.port }}
{{- end }}